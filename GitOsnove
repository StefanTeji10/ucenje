-------------------------------------------------------------------------------------------------------------
*. Korisne komande
-------------------------------------------------------------------------------------------------------------
>>> mkdir [path/ime_direktorijuma]    (pravljenje novog direktorijuma)
>>> ls -al                            (Pregled sadrzaja trenutnog direktorijuma)
>>> git log                           (Pregled poslednjih commitova)
-------------------------------------------------------------------------------------------------------------
1. Pavljenje praznog git repozitorijuma
-------------------------------------------------------------------------------------------------------------
>>> git config --global user.name +++
>>> git config --global user.email +++

Da bi videli nas fajl sa global settings
>>> git config --edit --global 

>>> git init
-------------------------------------------------------------------------------------------------------------
2. Staging (locally)
-------------------------------------------------------------------------------------------------------------
>>> git status
>>> git add .   or (name of file)
>>> git commit -m "message"
-------------------------------------------------------------------------------------------------------------
3. Setting the default editor (Visual Studio Code)
-------------------------------------------------------------------------------------------------------------
  a) add environmental variable \Microsoft VS Code\bin
>>> git config --global core.editor "code --wait --new-window"        (extra options: we want new window, and git will wait until our opened VS window is closed after editing)
>>> git config --edit --global        (otvara fajl sa global settings)
-------------------------------------------------------------------------------------------------------------
4. Interaction with GitHub (Full circle)
-------------------------------------------------------------------------------------------------------------
>>> git clone                   (From GitHub repo to Working directory)
>>> git add                     (Add to staging area from Working Directory)
>>> git commit                  (commiting files to .git repo)
>>> git push                    (Pushing commited files to GitHub repo) --> it can make a conflict
-------------------------------------------------------------------------------------------------------------
5. Interaction with GitHub (pratical)
-------------------------------------------------------------------------------------------------------------
>>> git clone [link]
>>> git add .                   (adding new files)
>>> git commit -m "message"     (commit changes)
>>> git push origin main        (We want to push this changes to origin, that is our remote, and I want to go to the main branch)
-------------------------------------------------------------------------------------------------------------
6. Working with multiple people on a same repository
-------------------------------------------------------------------------------------------------------------
>>> git status                  (it still doesn't know about changes that are made on GitHub repository)
>>> git fetch                   (to see is there any changes on the Github repository, on remote repository)(this will pull changes to our git database but not to our working directory)
>>> git status                  (now we see if there was changes in GitHub repository comparing to our last clone)
>>> git pull                     (if there is no conflicts it will put changes to our working directory)
>>> git push origin main
-------------------------------------------------------------------------------------------------------------
7. Conflicts if both files local and remote are changed
-------------------------------------------------------------------------------------------------------------
>>> git pull
>>> git push origin main
-------------------------------------------------------------------------------------------------------------
8. SSH
-------------------------------------------------------------------------------------------------------------
>>> ls -al ~/.ssh                           (Proveravamo da li imamo instaliran SSH)
>>> ssh-keygen -t rsa -b 4096 -c "email"    (Pravljenje novog SSH kljuca)   
>>> eval $(ssh-agent -s)                    (Provera da li ssh-agent radi)
>>> ssh-add ~/.ssh/id_rsa                   (adding ssh)
https://app.pluralsight.com/course-player?clipId=f6ae7104-611a-4a14-a5a9-2e7cc66195ba
>>> ssh -T git@github.com


